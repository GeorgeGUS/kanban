{"version":3,"sources":["actions/index.js","reducers/index.js","store.js","selectors/index.js","services/KanbanService.js","hoc/withEscapeAction.js","hoc/withDragDropContext.js","components/boards/Board/Board.js","components/boards/BoardTitle/BoardTitle.js","components/dnd/DroppableList.js","components/dnd/DraggableListItem.js","components/cards/Card/Card.js","components/cards/CardList/CardList.js","components/form/FormInput/FormInput.js","utils/index.js","components/form/Form/Form.js","components/boards/BoardActions/BoardActions.js","components/boards/BoardList/BoardList.js","components/boards/NewBoard/NewBoard.js","components/boards/Boards/Boards.js","components/App/App.js","index.js"],"names":["dataLoaded","createAction","updateText","addBoard","addCard","updateCardPosition","newBoardId","handleActions","_handleActions","Object","defineProperty","actions","state","_ref","payload","boards","allIds","length","newCardId","_handleActions2","_ref2","cards","text","_handleActions3","_ref3","_ref3$payload","id","value","objectSpread","_ref4","_ref5","boardId","_handleActions4","_ref6","_ref7","_ref7$payload","title","update","byId","$set","cardIds","$push","_ref8","_ref8$payload","_ref9","_byId4","_ref9$payload","srcIdx","destIdx","srcId","destId","$splice","_handleActions5","_ref10","_ref11","_ref11$payload","combineReducers","enhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunkMiddleware","store","createStore","reducers","boardsSelector","createSelector","_boards$allIds","map","KanbanService","data","1","2","3","4","5","6","7","8","9","10","11","_this","this","Promise","res","withEscapeAction","cb","Wrapped","_Component","_temp","_getPrototypeOf2","classCallCheck","_len","arguments","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","onEscPress","e","keyCode","inherits","createClass","key","addEventListener","removeEventListener","react_default","a","createElement","props","Component","withDragDropContext","react_beautiful_dnd_esm","onDragEnd","result","source","destination","draggableId","index","droppableId","Board","children","className","React","Children","child","cloneElement","BoardTitle","DroppableList","innerRef","droppableProps","placeholder","assign","ref","DraggableListItem","draggableProps","dragHandleProps","isDragging","Card","connect","dnd_DroppableList","cardId","_cards$cardId","dnd_DraggableListItem","cards_Card_Card","FormInput","InputTag","phTarget","onTextUpdate","onSubmit","type","onChange","target","style","height","scrollHeight","scrollTop","autoresize","onKeyDown","required","autoFocus","Form","_this$props","trim","onUnitAdd","evt","preventDefault","_this$props2","_this$props3","console","error","_this$props4","_this$props5","setEditable","inputProps","objectWithoutProperties","form_FormInput_FormInput","onClick","mapDispatchToProps","AddButton","BoardActions","_React$useState","useState","_React$useState2","slicedToArray","editable","handleEditableState","EscapableForm","form","Number","BoardActions_AddButton","BoardList","boards_Board_Board","boards_BoardTitle_BoardTitle","cards_CardList_CardList","boards_BoardActions_BoardActions","NewBoard","kanbanService","BoardListWithDragDrop","Boards","fetchData","boards_NewBoard_NewBoard","dispatch","bindActionCreators","service","getData","then","App","boards_Boards_Boards","component","es","components_App_App","render","document","getElementById"],"mappings":"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","file":"static/js/main.dfadd206.chunk.js","sourcesContent":["import { createAction } from 'redux-actions';\n\nexport const dataLoaded = createAction('FETCH_DATA_SUCCESS');\nexport const updateText = createAction('TEXT_UPDATE');\nexport const addBoard = createAction('BOARD_ADD');\nexport const addCard = createAction('CARD_ADD');\nexport const updateCardPosition = createAction('CARD_POSITION_UPDATE');\n\nexport const fetchData = service => () => dispatch => {\n  service.getData().then(data => dispatch(dataLoaded(data)));\n};\n","import { combineReducers } from 'redux';\nimport { handleActions } from 'redux-actions';\nimport * as actions from '../actions';\nimport update from 'immutability-helper';\n\nconst newBoardId = handleActions(\n  {\n    [actions.dataLoaded]: (state, { payload: { boards } }) =>\n      boards.allIds.length + 1,\n    [actions.addBoard]: state => state + 1\n  },\n  1\n);\n\nconst newCardId = handleActions(\n  {\n    [actions.dataLoaded]: (state, { payload: { cards } }) =>\n      cards.allIds.length + 1,\n    [actions.addCard]: state => state + 1\n  },\n  1\n);\n\nconst text = handleActions(\n  {\n    [actions.updateText]: (state, { payload: { id, value } }) => ({\n      ...state,\n      [id]: value\n    }),\n    [actions.addBoard]: (state, { payload: { id } }) => ({\n      ...state,\n      [id]: ''\n    }),\n    [actions.addCard]: (state, { payload: { boardId } }) => ({\n      ...state,\n      [boardId]: ''\n    })\n  },\n  {}\n);\n\nconst boards = handleActions(\n  {\n    [actions.dataLoaded]: (state, { payload: { boards } }) => boards,\n    [actions.addBoard]: (state, { payload: { id, title } }) =>\n      update(state, {\n        byId: { [id]: { $set: { id, title, cardIds: [] } } },\n        allIds: { $push: [id] }\n      }),\n    [actions.addCard]: (state, { payload: { id, boardId } }) =>\n      update(state, {\n        byId: { [boardId]: { cardIds: { $push: [id] } } }\n      }),\n    [actions.updateCardPosition]: (\n      state,\n      { payload: { srcIdx, destIdx, srcId, destId, id } }\n    ) => {\n      if (srcId === destId) {\n        return update(state, {\n          byId: {\n            [srcId]: { cardIds: { $splice: [[srcIdx, 1], [destIdx, 0, id]] } }\n          }\n        });\n      }\n      return update(state, {\n        byId: {\n          [srcId]: { cardIds: { $splice: [[srcIdx, 1]] } },\n          [destId]: { cardIds: { $splice: [[destIdx, 0, id]] } }\n        }\n      });\n    }\n  },\n  {}\n);\n\nconst cards = handleActions(\n  {\n    [actions.dataLoaded]: (state, { payload: { cards } }) => cards,\n    [actions.addCard]: (state, { payload: { id, text } }) =>\n      update(state, {\n        byId: { [id]: { $set: { id, text } } },\n        allIds: { $push: [id] }\n      })\n  },\n  {}\n);\n\nexport default combineReducers({ text, boards, cards, newBoardId, newCardId });\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport reducers from './reducers';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst enhancers = composeEnhancers(applyMiddleware(thunkMiddleware));\n\nconst store = createStore(reducers, enhancers);\n\nexport default store;\n","import { createSelector } from 'reselect';\n\nexport const boardsSelector = createSelector(\n  boards => boards,\n  boards => {\n    const { allIds = [], byId } = boards;\n    return allIds.map(id => byId[id]);\n  }\n);\n","class KanbanService {\n  data = {\n    boards: {\n      byId: {\n        1: {\n          id: 1,\n          title: 'План на месяц',\n          cardIds: [1, 2, 3, 4, 5, 6, 7, 8]\n        },\n        2: {\n          id: 2,\n          title: 'План на день',\n          cardIds: [9, 10, 11]\n        }\n      },\n      allIds: [1, 2]\n    },\n    cards: {\n      byId: {\n        1: {\n          id: 1,\n          text: 'Пройти курс по React'\n        },\n        2: {\n          id: 2,\n          text: 'Отметить день рождения'\n        },\n        3: {\n          id: 3,\n          text: 'Записаться на курсы английского языка, чтобы уехать в Лондон'\n        },\n        4: {\n          id: 4,\n          text: 'Сделать бекенд своего сайта на node.js'\n        },\n        5: {\n          id: 5,\n          text: 'Собрать портфолио'\n        },\n        6: {\n          id: 6,\n          text: 'Написать первую статью в блог'\n        },\n        7: {\n          id: 7,\n          text:\n            'Записаться в мотошколу. Хотя немного страшновато, конечно. Друзья и родители против, но очень хочется. Но кого я обманываю, уже 2 года решаюсь на этот шаг 😢 Еще и друзья будут хрустиком называть. В общем, хотя бы подумать над этим.'\n        },\n        8: {\n          id: 8,\n          text: 'Нет, я серьезный человек, иду в мотошколу. Записываюсь!'\n        },\n        9: {\n          id: 9,\n          text: 'Записаться на курс по React'\n        },\n        10: {\n          id: 10,\n          text: 'Забронировать тир на субботу'\n        },\n        11: {\n          id: 11,\n          text: 'Накидать тем для статей в блог'\n        }\n      },\n      allIds: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]\n    }\n  };\n\n  getData() {\n    return new Promise(res => res(this.data));\n  }\n}\n\nexport default KanbanService;\n","import React, { Component } from 'react';\n\nconst withEscapeAction = cb => Wrapped => {\n  return class extends Component {\n    onEscPress = e => {\n      if (e.keyCode === 27) {\n        cb(e);\n      }\n    };\n    componentDidMount() {\n      window.addEventListener('keydown', this.onEscPress);\n    }\n\n    componentWillUnmount() {\n      window.removeEventListener('keydown', this.onEscPress);\n    }\n\n    render() {\n      return <Wrapped {...this.props} />;\n    }\n  };\n};\n\nexport default withEscapeAction;\n","import React from 'react';\nimport { DragDropContext } from 'react-beautiful-dnd';\n\nconst withDragDropContext = Wrapped => props => {\n  const handleDragEnd = result => {\n    const { source, destination, draggableId: id } = result;\n    if (!destination) {\n      return;\n    }\n    const { index: srcIdx, droppableId: srcId } = source;\n    const { index: destIdx, droppableId: destId } = destination;\n    if (srcIdx === destIdx && srcId === destId) {\n      return;\n    }\n    const { onDragEnd } = props;\n    onDragEnd({ srcIdx, destIdx, srcId, destId, id });\n  };\n\n  return (\n    <DragDropContext onDragEnd={handleDragEnd}>\n      <Wrapped {...props} />\n    </DragDropContext>\n  );\n};\n\nexport default withDragDropContext;\n","import React from 'react';\nimport './Board.css';\n\nconst Board = ({ children, boardId }) => {\n  return (\n    <section className='board'>\n      {React.Children.map(children, child =>\n        React.cloneElement(child, { boardId })\n      )}\n    </section>\n  );\n};\n\nexport default Board;\n","import React from 'react';\nimport './BoardTitle.css';\n\nconst BoardTitle = ({ title }) => {\n  return (\n    <h2 className='board__title' title={title}>\n      {title}\n    </h2>\n  );\n};\n\nexport default BoardTitle;\n","import React from 'react';\nimport { Droppable } from 'react-beautiful-dnd';\n\nconst DroppableList = ({ className, children, id }) => (\n  <Droppable droppableId={id}>\n    {({ innerRef, droppableProps, placeholder }) => (\n      <ul className={className} ref={innerRef} {...droppableProps}>\n        {children}\n        {placeholder}\n      </ul>\n    )}\n  </Droppable>\n);\n\nexport default DroppableList;\n","import React from 'react';\nimport { Draggable } from 'react-beautiful-dnd';\n\nconst DraggableListItem = ({ className, children, id, index }) => (\n  <Draggable draggableId={id} index={index}>\n    {({ innerRef, draggableProps, dragHandleProps }, { isDragging }) => (\n      <li\n        className={className}\n        ref={innerRef}\n        {...draggableProps}\n        {...dragHandleProps}\n      >\n        {React.Children.map(children, child =>\n          React.cloneElement(child, { isDragging })\n        )}\n      </li>\n    )}\n  </Draggable>\n);\n\nexport default DraggableListItem;\n","import React from 'react';\nimport './Card.css';\n\nconst Card = ({ text, isDragging }) => {\n  return <p className={`card${isDragging ? ' card--dragging' : ''}`}>{text}</p>;\n};\n\nexport default Card;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { DroppableList, DraggableListItem } from '../../dnd';\nimport Card from '../Card';\n\nimport './CardList.css';\n\nconst CardList = ({ boardId, cards, cardIds }) => {\n  return (\n    <DroppableList className='card-list' id={boardId}>\n      {cardIds.map((cardId, index) => {\n        const { id, text } = cards[cardId];\n        return (\n          <DraggableListItem\n            className='card-list__item'\n            index={index}\n            key={id}\n            id={id}\n          >\n            <Card text={text} />\n          </DraggableListItem>\n        );\n      })}\n    </DroppableList>\n  );\n};\n\nconst mapStateToProps = ({ cards }) => ({\n  cards: cards.byId\n});\n\nexport default connect(mapStateToProps)(CardList);\n","import React from 'react';\nimport { autoresize } from '../../../utils';\n\nimport './FormInput.css';\n\nconst FormInput = ({ InputTag, phTarget, value, onTextUpdate, onSubmit }) => {\n  const handleTextChange = e => {\n    onTextUpdate(e);\n    autoresize(e);\n  };\n  const handleEnterDown = e => {\n    if (e.keyCode === 13) {\n      onSubmit(e);\n    }\n  };\n  return (\n    <InputTag\n      type='text'\n      className={`form__${InputTag}`}\n      value={value}\n      placeholder={`Введите название ${phTarget}`}\n      onChange={handleTextChange}\n      onKeyDown={handleEnterDown}\n      required\n      autoFocus\n    />\n  );\n};\n\nexport default FormInput;\n","export const autoresize = ({ target }) => {\n  target.style.height = 'auto';\n  target.style.height = target.scrollHeight + 'px';\n  target.scrollTop = target.scrollHeight;\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { addBoard, addCard, updateText } from '../../../actions';\nimport FormInput from '../FormInput';\nimport './Form.css';\n\nclass Form extends Component {\n  onTextUpdate = ({ target: { value } }) => {\n    const { updateText, boardId } = this.props;\n    if (value.trim() === '') {\n      updateText({ id: boardId, value: '' });\n      return;\n    }\n    updateText({ id: boardId, value });\n  };\n\n  onUnitAdd = evt => {\n    evt.preventDefault();\n    const { text, boardId } = this.props;\n    const value = text[boardId];\n    if (value === '') {\n      return;\n    }\n    const { type, newCardId, addBoard, addCard } = this.props;\n    switch (type) {\n      case 'board':\n        addBoard({ id: boardId, title: value });\n        break;\n      case 'card':\n        addCard({ id: newCardId, boardId, text: value });\n        break;\n      default:\n        console.error('Unknown action type:', type);\n    }\n  };\n\n  componentWillMount() {\n    const { boardId, updateText } = this.props;\n    updateText({ id: boardId, value: '' });\n  }\n\n  render() {\n    const { target, text, boardId, setEditable, ...inputProps } = this.props;\n    return (\n      <form id={boardId} className='form' onSubmit={this.onUnitAdd}>\n        <div className='form__row'>\n          <FormInput\n            {...inputProps}\n            value={text[boardId] || ''}\n            onTextUpdate={this.onTextUpdate}\n            onSubmit={this.onUnitAdd}\n          />\n        </div>\n        <div className='form__actions'>\n          <button type='submit' className='btn btn-success'>\n            Добавить {target}\n          </button>\n          <button type='button' className='btn btn-ghost' onClick={setEditable}>\n            <span className='icon icon-cross' />\n            <span className='visually-hidden'>Отменить</span>\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = ({ text, newCardId }) => ({\n  text,\n  newCardId\n});\n\nconst mapDispatchToProps = {\n  addBoard,\n  addCard,\n  updateText\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Form);\n","import React from 'react';\nimport Form from '../../form/Form';\nimport withEscapeAction from '../../../hoc/withEscapeAction';\n\nimport './BoardActions.css';\n\nconst AddButton = ({ target, setEditable }) => (\n  <button type='button' className='btn btn-ghost w-100' onClick={setEditable}>\n    <span className='icon icon-plus mr-8' />\n    Добавить еще одну {target}\n  </button>\n);\n\nconst BoardActions = props => {\n  const [editable, setEditable] = React.useState(false);\n  const { boardId } = props;\n\n  const handleEditableState = state => () => setEditable(state);\n\n  const handleEscapeEditableState = ({ target: { form } }) => {\n    const targetId = form ? Number(form.id) : boardId;\n    if (targetId === boardId) {\n      setEditable(false);\n    }\n  };\n\n  const EscapableForm = withEscapeAction(handleEscapeEditableState)(Form);\n\n  const actions = editable ? (\n    <EscapableForm {...props} setEditable={handleEditableState(false)} />\n  ) : (\n    <AddButton target={props.target} setEditable={handleEditableState(true)} />\n  );\n\n  return <div className='board__actions'>{actions}</div>;\n};\n\nexport default BoardActions;\n","import React from 'react';\nimport Board from '../Board';\nimport BoardTitle from '../BoardTitle';\nimport CardList from '../../cards/CardList';\nimport BoardActions from '../BoardActions';\n\nconst BoardList = ({ boards }) => {\n  return boards.map(({ id, title, cardIds }) => (\n    <Board key={id} boardId={id}>\n      <BoardTitle title={title} />\n      <CardList cardIds={cardIds} />\n      <BoardActions\n        type='card'\n        target='карточку'\n        phTarget='карточки'\n        InputTag='textarea'\n      />\n    </Board>\n  ));\n};\n\nexport default BoardList;\n","import React from 'react';\nimport Board from '../Board';\nimport BoardActions from '../BoardActions';\n\nconst NewBoard = ({ id }) => (\n  <Board boardId={id}>\n    <BoardActions\n      type='board'\n      target='колонку'\n      phTarget='колонки'\n      InputTag='input'\n    />\n  </Board>\n);\n\nexport default NewBoard;\n","import React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { boardsSelector } from '../../../selectors';\nimport { fetchData, updateCardPosition } from '../../../actions';\nimport KanbanService from '../../../services/KanbanService';\n\nimport { withDragDropContext } from '../../../hoc';\nimport BoardList from '../BoardList';\nimport NewBoard from '../NewBoard';\n\nimport './Boards.css';\n\nconst kanbanService = new KanbanService();\nconst BoardListWithDragDrop = withDragDropContext(BoardList);\n\nclass Boards extends Component {\n  componentDidMount() {\n    this.props.fetchData();\n  }\n\n  render() {\n    const { boards, newBoardId, updateCardPosition } = this.props;\n    return (\n      <div className='boards'>\n        <BoardListWithDragDrop boards={boards} onDragEnd={updateCardPosition} />\n        <NewBoard id={newBoardId} />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ boards, newBoardId }) => ({\n  boards: boardsSelector(boards),\n  newBoardId\n});\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators(\n    {\n      fetchData: fetchData(kanbanService),\n      updateCardPosition\n    },\n    dispatch\n  );\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Boards);\n","import React from 'react';\nimport Boards from '../boards/Boards';\n\nimport './App.css';\n\nconst App = () => {\n  return (\n    <div className='app'>\n      <h1 className='visually-hidden'>Канбан доска</h1>\n      <Boards />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport './index.css';\n\nimport App from './components/App';\n\nconst component = (\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n\nrender(component, document.getElementById('root'));\n"],"sourceRoot":""}